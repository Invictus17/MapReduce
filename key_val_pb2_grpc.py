# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import key_val_pb2 as key__val__pb2


class master_kvStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.store_key = channel.unary_unary(
                '/master_kv/store_key',
                request_serializer=key__val__pb2.store_request.SerializeToString,
                response_deserializer=key__val__pb2.store_response.FromString,
                )
        self.get_key = channel.unary_unary(
                '/master_kv/get_key',
                request_serializer=key__val__pb2.get_key_request.SerializeToString,
                response_deserializer=key__val__pb2.get_key_response.FromString,
                )
        self.get_all_keys = channel.unary_unary(
                '/master_kv/get_all_keys',
                request_serializer=key__val__pb2.all_key_request.SerializeToString,
                response_deserializer=key__val__pb2.all_key_response.FromString,
                )
        self.get_number_of_keys = channel.unary_unary(
                '/master_kv/get_number_of_keys',
                request_serializer=key__val__pb2.key_length_request.SerializeToString,
                response_deserializer=key__val__pb2.key_length_response.FromString,
                )


class master_kvServicer(object):
    """Missing associated documentation comment in .proto file."""

    def store_key(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_key(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_all_keys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_number_of_keys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_master_kvServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'store_key': grpc.unary_unary_rpc_method_handler(
                    servicer.store_key,
                    request_deserializer=key__val__pb2.store_request.FromString,
                    response_serializer=key__val__pb2.store_response.SerializeToString,
            ),
            'get_key': grpc.unary_unary_rpc_method_handler(
                    servicer.get_key,
                    request_deserializer=key__val__pb2.get_key_request.FromString,
                    response_serializer=key__val__pb2.get_key_response.SerializeToString,
            ),
            'get_all_keys': grpc.unary_unary_rpc_method_handler(
                    servicer.get_all_keys,
                    request_deserializer=key__val__pb2.all_key_request.FromString,
                    response_serializer=key__val__pb2.all_key_response.SerializeToString,
            ),
            'get_number_of_keys': grpc.unary_unary_rpc_method_handler(
                    servicer.get_number_of_keys,
                    request_deserializer=key__val__pb2.key_length_request.FromString,
                    response_serializer=key__val__pb2.key_length_response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'master_kv', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class master_kv(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def store_key(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/master_kv/store_key',
            key__val__pb2.store_request.SerializeToString,
            key__val__pb2.store_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_key(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/master_kv/get_key',
            key__val__pb2.get_key_request.SerializeToString,
            key__val__pb2.get_key_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_all_keys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/master_kv/get_all_keys',
            key__val__pb2.all_key_request.SerializeToString,
            key__val__pb2.all_key_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_number_of_keys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/master_kv/get_number_of_keys',
            key__val__pb2.key_length_request.SerializeToString,
            key__val__pb2.key_length_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
